@using Shared.Models.Checkpoints
<!-- CheckpointCard.razor -->
<div class="p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <div class="flex justify-between items-start">
        <div>
            <h5 class="mb-1 text-xl font-medium text-gray-900 dark:text-white">
                @(Checkpoint.Address?.State ?? "Unnamed Checkpoint")
            </h5>
            <span class="text-sm text-gray-500 dark:text-gray-400">
                @Checkpoint.Address?.Location, @Checkpoint.Address?.ContactAddress
            </span>
        </div>
        <div class="flex space-x-2">
            <button type="button" class="inline-flex items-center p-2 text-sm font-medium text-blue-700 bg-white border border-blue-700 rounded-lg hover:bg-blue-700 hover:text-white focus:z-10 focus:ring-2 focus:ring-blue-700 dark:bg-gray-800 dark:text-blue-400 dark:border-blue-400 dark:hover:bg-blue-400 dark:hover:text-white"
                    @onclick="OnEdit">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15.232 5.232l3.536 3.536M9 13l6.536-6.536a2 2 0 112.828 2.828L11.828 15.828a2 2 0 01-2.828 0L9 13z"></path>
                </svg>
            </button>
            <button type="button" class="inline-flex items-center p-2 text-sm font-medium text-red-700 bg-white border border-red-700 rounded-lg hover:bg-red-700 hover:text-white focus:z-10 focus:ring-2 focus:ring-red-700 dark:bg-gray-800 dark:text-red-400 dark:border-red-400 dark:hover:bg-red-400 dark:hover:text-white"
                    @onclick="OnDelete">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    </div>

    <div class="mt-4 grid grid-cols-2 gap-4 text-sm">
        <div>
            <p class="text-gray-500 dark:text-gray-400">Distance</p>
            <p>@(Checkpoint.ActualDistanceFromPreviousKm?.ToString("0.0") ?? "-") / @(Checkpoint.ExpectedDistanceFromPreviousKm?.ToString("0.0") ?? "-") km</p>
        </div>
        <div>
            <p class="text-gray-500 dark:text-gray-400">Arrival</p>
            <p>@(Checkpoint.ActualArrivalTime?.ToString("g") ?? "Pending")</p>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Checkpoint.Notes))
    {
        <div class="mt-4">
            <p class="text-sm text-gray-700 dark:text-gray-300">@Checkpoint.Notes</p>
        </div>
    }
</div>

@code {
    [Parameter] public Checkpoint Checkpoint { get; set; } = new();
    [Parameter] public EventCallback OnEdit { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }
}
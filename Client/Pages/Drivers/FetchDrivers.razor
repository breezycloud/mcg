@page "/drivers"
@inject IDriverService DriverService
@attribute [Authorize(Roles = "Supervisor, Admin, Master")]
<PageTitle>Drivers</PageTitle>


<section class="bg-gray-50 dark:bg-gray-900 rounded-lg">
    <div class="px-4 lg:px-12">
        <div class="bg-white dark:bg-gray-800 relative shadow-md sm:rounded-lg overflow-hidden">
            <!-- Header with search and add button -->
          <div class="flex flex-col items-center justify-between p-4 space-y-3 md:flex-row md:space-y-0 md:space-x-4">
                <div class="w-full flex-auto">
                    <label for="driver-search" class="sr-only">Search drivers</label>
                    <div class="relative w-full">
                        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
                            </svg>
                        </div>
                        <input 
                            type="text" 
                            id="driver-search" 
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" 
                            placeholder="Search drivers..." 
                            @bind-value="@request.SearchTerm" @bind-value:event="oninput" @onkeyup="async () => await HandleSearch(request.SearchTerm!)" />
                    </div>
                </div>
                <AuthorizeView Roles = "Admin, Master, Supervisor">
                    <Authorized>
                        <div class="flex flex-col items-stretch justify-end flex-shrink-0 w-full space-y-2 md:w-auto md:flex-row md:space-y-0 md:items-center md:space-x-3">
                            <a 
                                href="drivers/report" 
                                type="button" 
                                class="flex items-center justify-center text-white bg-green-600 hover:bg-green-700 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-4 py-2.5 dark:bg-green-500 dark:hover:bg-green-600 focus:outline-none dark:focus:ring-green-700">
                                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                    <path clip-rule="evenodd" fill-rule="evenodd" d="M5.999 2.5a1.5 1.5 0 011.5 1.5v10.5a1.5 1.5 0 01-3 0V4a1.5 1.5 0 011.5-1.5zM10 2.5a1.5 1.5 0 011.5 1.5v10.5a1.5 1.5 0 01-3 0V4a1.5 1.5 0 011.5-1.5zM14.001 4a1.5 1.5 0 00-1.5 1.5v6.5a1.5 1.5 0 003 0V5.5a1.5 1.5 0 00-1.5-1.5z"></path>
                                </svg>
                                Report
                            </a>
                            <button 
                                @onclick="AddDriver" 
                                type="button" 
                                class="flex items-center justify-center text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">
                                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                                    <path clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" />
                                </svg>
                                Add Driver
                            </button>
                        </div>
                    </Authorized>
                </AuthorizeView>                
            </div>

            <!-- Table -->
            <div class="overflow-x-auto">
                <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-400">
                        <tr>
                            <th scope="col" class="px-6 py-3">Driver</th>
                            <th scope="col" class="px-6 py-3">Contact</th>
                            <th scope="col" class="px-6 py-3">Dates</th>
                            <th scope="col" class="px-6 py-3">Status</th>
                            <th scope="col" class="px-6 py-3 text-right">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (drivers != null && drivers.Data!.Any())
                        {
                            foreach (var driver in drivers.Data!)
                            {
                                <tr class="border-b dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                                    <td class="px-6 py-4">
                                        <div class="font-medium text-gray-900 dark:text-white">@driver.FirstName @driver.LastName</div>
                                        @* <div class="text-xs text-gray-500">ID: @driver.Id</div> *@
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="flex items-center">
                                            <svg class="w-4 h-4 mr-2 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"/>
                                            </svg>
                                            @driver.PhoneNo
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div class="text-sm">
                                            <div>Created: @driver.CreatedAt.ToString("MMM dd, yyyy")</div>
                                            <div class="text-gray-500">Updated: @(driver.UpdatedAt?.ToString("MMM dd, yyyy") ?? "Never")</div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <span class="bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-300">
                                            Active
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 text-right">
                                        <div class="flex justify-end space-x-3">
                                            <button 
                                                @onclick="(() => ViewDriver(driver.Id))" 
                                                class="font-medium text-green-600 dark:text-green-500 hover:underline">
                                                View
                                            </button>
                                            <button 
                                                @onclick="() => EditDriver(driver.Id)" 
                                                class="font-medium text-blue-600 dark:text-blue-400 hover:underline">
                                                Edit
                                            </button>
                                            @* <button 
                                                @onclick="() => DeleteDriver(driver.Id)" 
                                                class="font-medium text-red-600 dark:text-red-500 hover:underline">
                                                Delete
                                            </button> *@
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="px-6 py-4 text-center text-gray-500 dark:text-gray-400">
                                    @if (AppState.IsBusy)
                                    {
                                        <div class="flex justify-center items-center">
                                            <svg class="animate-spin -ml-1 mr-3 h-4 w-4 text-blue-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                            </svg>
                                            Loading drivers...
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="flex flex-col items-center justify-center py-6">
                                            <svg class="w-8 h-8 text-gray-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                            <span class="text-lg font-medium">No drivers found</span>
                                            <p class="text-sm text-gray-500 mt-1">Try adjusting your search or add a new driver</p>
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <div class="p-4 border-t border-gray-200 dark:border-gray-700">
                <Pagination             
                    CurrentPage="request.Page + 1"
                    PageSize="request.PageSize"
                    TotalItems="drivers?.Total ?? 0"
                    OnPageChanged="async (page) => { 
                        request.Page = page - 1; 
                        await LoadDrivers(); 
                        StateHasChanged(); 
                    }" />
            </div>
        </div>
    </div>
</section>


@code {
    private GridDataResponse<Driver>? drivers = null;
    private GridDataRequest request = new();

    

    protected override async Task OnInitializedAsync()
    {
        request = new GridDataRequest { Page = 0, PageSize = 10};
        await LoadDrivers();
    }

    private async Task HandleSearch(string search)
    {
        if (string.IsNullOrWhiteSpace(search))
        {
            request.SearchTerm = string.Empty;
        }
        else
            request.SearchTerm = search;
        request.Page = 0; // Reset to first page when searching
        await LoadDrivers();
    }
    
    private async Task LoadDrivers()
    {
        AppState.IsBusy = true;
        try 
        {
            drivers = await DriverService.GetPagedAsync(request, AppState.GetCancellationToken());
        }
        finally
        {
            AppState.IsBusy = false;
        }
        
    }

    private void AddDriver()
    {
        nav.NavigateTo("/drivers/add");
    }

    private void EditDriver(Guid id)
    {
        nav.NavigateTo($"/drivers/edit/{id}");
    }
    private void ViewDriver(Guid id)
    {
        nav.NavigateTo($"/driver/{id}");
    }

    private async Task DeleteDriver(Guid id)
    {
        await DriverService.DeleteAsync(id, AppState.GetCancellationToken());
        drivers = await DriverService.GetPagedAsync(request, AppState.GetCancellationToken());
    }
} 

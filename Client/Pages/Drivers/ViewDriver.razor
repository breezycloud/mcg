@* New *@
@* ViewDriver.razor *@
@page "/driver/{Id:guid}"
@inject IDriverService DriverService
@inject ITripService TripService
@attribute [Authorize(Roles = "Supervisor, Admin, Master")]

<div class="max-w-4xl mx-auto p-4 sm:p-6">
    @if (AppState.IsBusy)
    {
        <Loader />
    }
    else
    {
        <!-- Header Section -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div>
                    <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Driver Details</h2>
                    <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Complete information for driver @CurrentDriver.FirstName @CurrentDriver.LastName</p>
                </div>
                <div class="flex gap-3">
                    <button @onclick="NavigateToEdit" 
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                        Edit Driver
                    </button>
                    <button @onclick="NavigateBack" 
                            class="px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-700 dark:focus:ring-gray-700 flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                        </svg>
                        Back to List
                    </button>
                </div>
            </div>
        </div>

        <!-- Main Information Card -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-6">
            <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Personal Information</h3>
            </div>
            <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- First Name -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">First Name</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @CurrentDriver.FirstName
                        </div>
                    </div>

                    <!-- Last Name -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Last Name</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @CurrentDriver.LastName
                        </div>
                    </div>

                    <!-- Phone Number -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Phone Number</label>
                        <div class="flex items-center bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            <svg class="w-4 h-4 mr-2 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"/>
                            </svg>
                            @CurrentDriver.PhoneNo
                        </div>
                    </div>

                    <!-- License Number -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">License Number</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300 font-mono">
                            @CurrentDriver.LicenseNo
                        </div>
                    </div>

                    <!-- Expiry Date -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">License Expiry Date</label>
                        <div class="flex items-center justify-between bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            <span>@(CurrentDriver.ExpiryDate?.ToString("yyyy-MM-dd") ?? "Not set")</span>
                            @if (CurrentDriver.ExpiryDate.HasValue)
                            {
                                <span class="px-2 py-1 text-xs font-medium rounded-full @GetLicenseStatusBadgeClass(CurrentDriver.ExpiryDate.Value)">
                                    @GetLicenseStatus(CurrentDriver.ExpiryDate.Value)
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Card -->
        @if (DriverStats != null)
        {
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-6">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Performance Statistics</h3>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
                        <div class="text-center">
                            <div class="text-2xl font-bold text-blue-600 dark:text-blue-400">@DriverStats.TotalTrips</div>
                            <div class="text-sm text-gray-500 dark:text-gray-400">Total Trips</div>
                        </div>
                        <div class="text-center">
                            <div class="text-2xl font-bold text-green-600 dark:text-green-400">@DriverStats.CompletedTrips</div>
                            <div class="text-sm text-gray-500 dark:text-gray-400">Completed</div>
                        </div>
                        <div class="text-center">
                            <div class="text-2xl font-bold text-yellow-600 dark:text-yellow-400">@DriverStats.ThisMonthTrips</div>
                            <div class="text-sm text-gray-500 dark:text-gray-400">This Month</div>
                        </div>
                        <div class="text-center">
                            <div class="text-2xl font-bold text-purple-600 dark:text-purple-400">@DriverStats.AverageRating.ToString("0.0")</div>
                            <div class="text-sm text-gray-500 dark:text-gray-400">Avg Rating</div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Files Card -->
        @if (CurrentDriver.Files?.Any() == true)
        {
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-6">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Uploaded Documents</h3>
                </div>
                <div class="p-6">
                    <div class="space-y-3">
                        @foreach (var file in CurrentDriver.Files)
                        {
                            <div class="flex items-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600">
                                <svg class="w-5 h-5 mr-3 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
                                </svg>
                                <div class="flex-1">
                                    <span class="text-sm font-medium text-gray-900 dark:text-white">@file.FileName</span>
                                    <p class="text-xs text-gray-500 dark:text-gray-400">Uploaded @file.UploadTime.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Metadata Footer -->
        <div class="bg-gray-50 dark:bg-gray-800/50 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
            <div class="flex flex-col sm:flex-row justify-between text-sm text-gray-500 dark:text-gray-400">
                <div class="mb-2 sm:mb-0">
                    <span class="font-medium">Created:</span> @CurrentDriver.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")
                </div>
                @if (CurrentDriver.UpdatedAt.HasValue)
                {
                    <div>
                        <span class="font-medium">Last Updated:</span> @CurrentDriver.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public Guid Id { get; set; }
    private Driver CurrentDriver { get; set; } = new();
    private DriverStatistics? DriverStats { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        AppState.IsBusy = true;
        CurrentDriver = await DriverService.GetAsync(Id, AppState.GetCancellationToken()) ?? new();
        await LoadDriverStatistics();
        AppState.IsBusy = false;
    }

    private async Task LoadDriverStatistics()
    {
        var trips = CurrentDriver.Trips;
        var currentMonth = DateTime.Now.Month;
        var currentYear = DateTime.Now.Year;
        var completedTrips = trips.Where(t => t.Status == TripStatus.Completed).ToList();

        DriverStats = new DriverStatistics
        {
            TotalTrips = trips.Count,
            CompletedTrips = completedTrips.Count,
            ThisMonthTrips = trips.Count(t => t.Date.Month == currentMonth && t.Date.Year == currentYear),
            AverageRating = completedTrips.Any() ? 
                completedTrips.Average(t => t.CloseInfo?.Rating ?? 0) : 0
        };
    }

    private string GetLicenseStatus(DateOnly expiryDate)
    {
        var daysUntilExpiry = (expiryDate.ToDateTime(TimeOnly.MinValue) - DateTime.Today).Days;
        
        if (daysUntilExpiry < 0) return "Expired";
        if (daysUntilExpiry <= 30) return "Expiring Soon";
        return "Valid";
    }

    private string GetLicenseStatusBadgeClass(DateOnly expiryDate)
    {
        var status = GetLicenseStatus(expiryDate);
        return status switch
        {
            "Valid" => "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300",
            "Expiring Soon" => "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300",
            "Expired" => "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300",
            _ => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300"
        };
    }

    private void NavigateToEdit()
    {
        nav.NavigateTo($"/drivers/edit/{Id}");
    }

    private void NavigateBack()
    {
        nav.NavigateTo("/drivers");
    }

    private class DriverStatistics
    {
        public int TotalTrips { get; set; }
        public int CompletedTrips { get; set; }
        public int ThisMonthTrips { get; set; }
        public double AverageRating { get; set; }
    }
}



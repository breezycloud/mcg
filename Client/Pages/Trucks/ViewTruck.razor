@* TruckDetailsView.razor *@
@page "/view-truck/{Id:guid?}"
@inject ITruckService TruckService

<div class="max-w-4xl mx-auto p-4 sm:p-6">
    @if (Truck == null)
    {
        <Loader />
    }
    else
    {
        <!-- Header Section -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div>
                    <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Truck Details</h2>
                    <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Complete information for truck @Truck.TruckNo</p>
                </div>
                <div class="flex gap-3">
                    <button @onclick="NavigateToEdit" 
                            class="px-4 py-2 text-sm font-medium text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                        </svg>
                        Edit Truck
                    </button>
                    <button @onclick="NavigateBack" 
                            class="px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-700 dark:focus:ring-gray-700 flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                        </svg>
                        Back to List
                    </button>
                </div>
            </div>
        </div>

        <!-- Status Banner -->
        @if (IsAwaitingLoading)
        {
            <div class="mb-6 p-4 bg-yellow-50 border-l-4 border-yellow-400 rounded-lg dark:bg-yellow-900/20 dark:border-yellow-600">
                <div class="flex items-center">
                    <svg class="w-5 h-5 mr-3 text-yellow-600 dark:text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v2a1 1 0 002 0V5a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    <div>
                        <h4 class="text-sm font-semibold text-yellow-800 dark:text-yellow-400">Awaiting Loading</h4>
                        <p class="text-sm text-yellow-700 dark:text-yellow-300 mt-1">This truck is currently in an active trip status.</p>
                    </div>
                </div>
            </div>
        }

        <!-- Main Information Card -->
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-6">
            <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Basic Information</h3>
                <div>
                    <label class="block mt-2 text-sm font-medium @(Truck.IsActive ? "text-green-400"  : "text-red-400")">
                        @(Truck.IsActive ? "Active"  : "Temporary out of Service")
                    </label>                        
                </div>
            </div>
            <div class="p-6">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- Truck Number -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Truck Number</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.TruckNo
                        </div>
                    </div>

                    <!-- License Plate -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">License Plate</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.LicensePlate
                        </div>
                    </div>

                    <!-- Manufacturer -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Manufacturer</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.Manufacturer
                        </div>
                    </div>

                    <!-- Color -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Color</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.Color
                        </div>
                    </div>

                    <!-- VIN -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">VIN</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.VIN
                        </div>
                    </div>

                    <!-- Engine Number -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Engine Number</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.EngineNo
                        </div>
                    </div>

                    <!-- Product Type -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Product Type</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.Product?.ToString()
                        </div>
                    </div>

                    <!-- Calibration Type -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Calibration Type</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @Truck.CalibrationType.ToString()
                        </div>
                    </div>

                    <!-- Expiry Date -->
                    <div>
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Expiry Date</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @(Truck.ExpiryDate?.ToString("yyyy-MM-dd") ?? "N/A")
                        </div>
                    </div>

                    <!-- Driver -->
                    <div class="md:col-span-2 lg:col-span-3">
                        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Driver</label>
                        <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                            @(Truck.Driver?.ToString() ?? "Unassigned")
                        </div>
                    </div>                    
                    <div>                        
                    </div>
                </div>
            </div>
        </div>

        <!-- Calibration Parameters Card -->
        @if (Truck.CalibrationParams?.Any() == true)
        {
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-6">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Calibration Parameters</h3>
                    <span class="text-sm text-gray-500 dark:text-gray-400">@Truck.CalibrationParams.Count parameters</span>
                </div>
                <div class="p-6">
                    <div class="overflow-x-auto">
                        <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                            <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                                <tr>
                                    <th scope="col" class="px-4 py-3">Compartment</th>
                                    @if (Truck.Product == Product.LPG)
                                    {
                                        <th scope="col" class="px-4 py-3">Tare Weight (KG)</th>
                                        <th scope="col" class="px-4 py-3">Gross Weight (KG)</th>
                                        <th scope="col" class="px-4 py-3">Net Weight (KG)</th>
                                    }
                                    else
                                    {
                                        <th scope="col" class="px-4 py-3">Ullage</th>
                                        <th scope="col" class="px-4 py-3">Liquid Height</th>
                                        <th scope="col" class="px-4 py-3">Overall</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var param in Truck.CalibrationParams)
                                {
                                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                                        <td class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                            @(StringConverter.ToDescription(param.Compartment))
                                        </td>
                                        @if (Truck.Product == Product.LPG)
                                        {
                                            <td class="px-4 py-3">@param.TareWeight</td>
                                            <td class="px-4 py-3">@param.GrossWeight</td>
                                            <td class="px-4 py-3">@param.NetWeight</td>
                                        }
                                        else
                                        {
                                            <td class="px-4 py-3">@(param.Ullage?.Quantity.ToString() ?? "N/A")</td>
                                            <td class="px-4 py-3">@(param.LiquidHeight?.Quantity.ToString() ?? "N/A")</td>
                                            <td class="px-4 py-3">@param.Overall</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

        <!-- Active Trip Card -->
        @if (ActiveTrip != null)
        {
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-blue-200 dark:border-blue-800 mb-6">
                <div class="px-6 py-4 border-b border-blue-200 dark:border-blue-700 bg-blue-50 dark:bg-blue-900/20 rounded-t-lg">
                    <h3 class="text-lg font-semibold text-blue-800 dark:text-blue-400 flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        Active Trip
                    </h3>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Status</label>
                            <div class="flex items-center">
                                <span class="px-3 py-1 text-xs font-semibold rounded-full 
                                    @GetStatusBadgeClass(ActiveTrip.Status)">
                                    @ActiveTrip.Status.ToString()
                                </span>
                            </div>
                        </div>
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Date</label>
                            <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                                @ActiveTrip.Date.ToString("yyyy-MM-dd")
                            </div>
                        </div>
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Dispatch ID</label>
                            <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                                @ActiveTrip.DispatchId
                            </div>
                        </div>
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">From</label>
                            <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                                @(ActiveTrip.LoadingDepot?.Name ?? "Unknown")
                            </div>
                        </div>
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">To</label>
                            <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                                @(ActiveTrip.ReceivingDepot?.Name ?? "Unknown")
                            </div>
                        </div>
                        <div>
                            <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Driver</label>
                            <div class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-300">
                                @(ActiveTrip.Driver?.ToString() ?? "Unassigned")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Files Card -->
        @if (Truck.Files?.Any() == true)
        {
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md border border-gray-200 dark:border-gray-700 mb-6">
                <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        Uploaded Files
                    </h3>
                </div>
                <div class="p-6">
                    <div class="space-y-3">
                        @foreach (var file in Truck.Files)
                        {
                            <div class="flex items-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg border border-gray-200 dark:border-gray-600">
                                <svg class="w-5 h-5 mr-3 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
                                </svg>
                                <div class="flex-1">
                                    <span class="text-sm font-medium text-gray-900 dark:text-white">@file.FileName</span>
                                    <p class="text-xs text-gray-500 dark:text-gray-400">Uploaded @file.UploadTime.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                </div>
                                <span class="text-xs text-gray-500 dark:text-gray-400">@file.FormattedSize</span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }

        <!-- Metadata Footer -->
        <div class="bg-gray-50 dark:bg-gray-800/50 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
            <div class="flex flex-col sm:flex-row justify-between text-sm text-gray-500 dark:text-gray-400">
                <div class="mb-2 sm:mb-0">
                    <span class="font-medium">Created:</span> @Truck.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")
                </div>
                @if (Truck.UpdatedAt.HasValue)
                {
                    <div>
                        <span class="font-medium">Last Updated:</span> @Truck.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    public Truck? Truck { get; set; }
    [Parameter]
    public Guid Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Truck = await TruckService.GetAsync(Id, AppState.GetCancellationToken());
    }

    private Trip? ActiveTrip => Truck?.Trips?.OrderByDescending(t => t.CreatedAt)
        .FirstOrDefault(t => t.Status != TripStatus.Completed && t.Status != TripStatus.Closed);

    private bool IsAwaitingLoading => ActiveTrip?.Status == TripStatus.Active ||                                         
                                     ActiveTrip?.Status == TripStatus.Closed ||
                                     ActiveTrip?.Status == TripStatus.Completed;

    private string GetStatusBadgeClass(TripStatus status)
    {
        return status switch
        {
            TripStatus.Active => "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300",
            TripStatus.Closed => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300",
            TripStatus.Completed => "bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300",
            _ => "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300"
        };
    }

    private void NavigateToEdit()
    {
        nav.NavigateTo($"/trucks/edit/{Id}");
    }

    private void NavigateBack()
    {
        nav.NavigateTo("/trucks");
    }
}
@* TruckDetailsView.razor *@
@page "/view-truck/{Id:guid?}"
@inject ITruckService TruckService

<div class="p-6 bg-white rounded-lg shadow-md border border-gray-200">
    <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
        <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
        </svg>
        Truck Details
    </h2>

    @if (Truck == null)
    {
        @* <div class="flex justify-center items-center py-10">
            <div class="text-gray-500">Loading...</div>
        </div> *@

        <Loader/>
    }
    else
    {
        <!-- Status Banner -->
        @if (IsAwaitingLoading)
        {
            <div class="mb-6 p-4 bg-yellow-50 border-l-4 border-yellow-400 text-yellow-800 rounded">
                <div class="flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v2a1 1 0 102 0V5a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    <strong>This truck is currently AWAITING LOADING.</strong>
                </div>
            </div>
        }

        <!-- Truck Info Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
            <div>
                <label class="block text-sm font-medium text-gray-700">Truck No</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.TruckNo</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">License Plate</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.LicensePlate</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Manufacturer</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.Manufacturer</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Color</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.Color</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">VIN</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.VIN</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Engine No</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.EngineNo</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Product Type</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.Product?.ToString()</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Calibration Type</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@Truck.CalibrationType.ToString()</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Expiry Date</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@(Truck.ExpiryDate?.ToString("yyyy-MM-dd") ?? "N/A")</div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Driver</label>
                <div class="mt-1 p-3 bg-gray-50 rounded border">@(Truck.Driver?.ToString() ?? "Unassigned")</div>
            </div>
        </div>

        <!-- Calibration Params -->
        @if (Truck.CalibrationParams?.Any() == true)
        {
            <div class="mb-6">
                <h3 class="text-lg font-semibold text-gray-800 mb-3">Calibration Parameters</h3>
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-300 rounded-lg">
                        <thead class="bg-gray-100">
                            <tr>
                                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Compartment</th>
                                @if (Truck.Product == Product.LPG)
                                {
                                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tare Weight (KG)</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Gross Weight (KG)</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Net Weight (KG)</th>
                                }
                                else
                                {
                                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ullage</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Liquid Height</th>
                                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Overall</th>
                                }
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200">
                            @foreach (var param in Truck.CalibrationParams)
                            {
                                <tr>
                                    <td class="px-4 py-2 whitespace-nowrap">@(StringConverter.ToDescription(param.Compartment))</td>
                                    @if (Truck.Product == Product.LPG)
                                    {
                                        <td class="px-4 py-2">@param.TareWeight</td>
                                        <td class="px-4 py-2">@param.GrossWeight</td>
                                        <td class="px-4 py-2">@param.NetWeight</td>
                                    }
                                    else
                                    {
                                        <td class="px-4 py-2">@(param.Ullage?.Quantity.ToString() ?? "N/A")</td>
                                        <td class="px-4 py-2">@(param.LiquidHeight?.Quantity.ToString() ?? "N/A")</td>
                                        <td class="px-4 py-2">@param.Overall</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        <!-- Active Trip Info -->
        @if (ActiveTrip != null)
        {
            <div class="mb-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <h3 class="text-lg font-semibold text-blue-800 mb-3">Active Trip</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                    <div><strong>Status:</strong> <span class="font-medium">@ActiveTrip.Status.ToString()</span></div>
                    <div><strong>Date:</strong> @ActiveTrip.Date.ToString("yyyy-MM-dd")</div>
                    <div><strong>Dispatch ID:</strong> @ActiveTrip.DispatchId</div>
                    <div><strong>From:</strong> @(ActiveTrip.LoadingDepot?.Name ?? "Unknown")</div>
                    <div><strong>To:</strong> @(ActiveTrip.ReceivingDepot?.Name ?? "Unknown")</div>
                    <div><strong>Driver:</strong> @(ActiveTrip.Driver?.ToString() ?? "Unassigned")</div>
                </div>
            </div>
        }

        <!-- Files Uploads -->
        @if (Truck.Files?.Any() == true)
        {
            <div class="mb-6">
                <h3 class="text-lg font-semibold text-gray-800 mb-3">Uploaded Files</h3>
                <ul class="space-y-2">
                    @foreach (var file in Truck.Files)
                    {
                        <li class="flex items-center p-2 bg-gray-50 rounded">
                            <svg class="w-5 h-5 mr-2 text-gray-500" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path>
                            </svg>
                            <span>@file.FileName</span>
                            <span class="ml-auto text-xs text-gray-500">@file.UploadTime.ToString("MM/dd HH:mm")</span>
                        </li>
                    }
                </ul>
            </div>
        }

        <!-- Created/Updated -->
        <div class="text-xs text-gray-500 mt-6 pt-4 border-t">
            Created: @Truck.CreatedAt.ToString("yyyy-MM-dd HH:mm") 
            @if (Truck.UpdatedAt.HasValue)
            {
                <span> â€¢ Updated: @Truck.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm")</span>
            }
        </div>
    }
</div>

@code {
    public Truck? Truck { get; set; }
    [Parameter]
    public Guid Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Truck = await TruckService.GetAsync(Id, AppState.GetCancellationToken());
    }

    private Trip? ActiveTrip => Truck?.Trips?.OrderByDescending(t => t.CreatedAt)
        .FirstOrDefault(t => t.Status != TripStatus.Completed && t.Status != TripStatus.Closed);

    private bool IsAwaitingLoading => ActiveTrip?.Status == TripStatus.Active ||                                         
                                     ActiveTrip?.Status == TripStatus.Closed ||
                                     ActiveTrip?.Status == TripStatus.Completed;    


}
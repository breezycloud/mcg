@inject IJSRuntime JSRuntime

@if (IsVisible)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-gray bg-opacity-50">
        <div class="relative p-4 w-full max-w-md max-h-full">
            <div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">
                <button type="button" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                        @onclick="CloseModal">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                </button>            
                <div class="p-4 md:p-5 text-center">
                    @* <h2 class="text-lg font-semibold text-gray-800 dark:text-gray-200 mb-4">
                        @Title
                    </h2> *@
                    <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                    </svg>
                    <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">
                        @Message
                    </h3>
                    <button type="button" class="text-white bg-blue-600 hover:bg-blue-800 px-5 py-2.5 rounded-lg"
                            @onclick="() => Confirm()">
                        Confirm
                    </button>
                    <button type="button" class="py-2.5 px-5 ms-3 text-gray-900 bg-white border rounded-lg"
                            @onclick="Cancel">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string Title { get; set; } = "Confirmation";
    [Parameter] public string Message { get; set; } = "Are you sure?";
    [Parameter] public EventCallback<bool> OnClose { get; set; }

    private bool IsVisible { get; set; }

    public void Show()
    {
        IsVisible = true;
        StateHasChanged();
    }

    private async Task CloseModal()
    {
        IsVisible = false;
        await OnClose.InvokeAsync(false);
    }

    private async Task Confirm()
    {
        IsVisible = false;
        await OnClose.InvokeAsync(true);
    }

    private async Task Cancel()
    {
        IsVisible = false;
        await OnClose.InvokeAsync(false);
    }
}

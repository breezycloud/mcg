@using Shared.Models.Checkpoints

<div class="p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
    <div class="flex justify-between items-start">
        <div>
            <h5 class="mb-1 text-xl font-medium text-gray-900 dark:text-white">
                @Data.Station?.Name
            </h5>
        </div>
        <div class="flex space-x-2">
            <button type="button" class="inline-flex items-center p-2 text-sm font-medium text-red-700 bg-white border border-red-700 rounded-lg hover:bg-red-700 hover:text-white focus:z-10 focus:ring-2 focus:ring-red-700 dark:bg-gray-800 dark:text-red-400 dark:border-red-400 dark:hover:bg-red-400 dark:hover:text-white"
                    @onclick="ShowDeleteConfirmation">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    </div>

    <div class="mt-4 grid grid-cols-2 gap-4 text-sm">
        <div>
            <p class="text-gray-500 dark:text-gray-400">Arrival Date/Time</p>
            <p>@Data.TruckArrival?.ToString("g")</p>
        </div>
        <div>
            <p class="text-gray-500 dark:text-gray-400">Station</p>
            <p>@Data.Station?.Name</p>
        </div>
        <div>
            <p class="text-gray-500 dark:text-gray-400">Discharge Time</p>
            <p>@Data.DischargeStartTime.ToString("g")</p>
        </div>
        <div>
            <p class="text-gray-500 dark:text-gray-400">Quantity Discharged</p>
            <p>@Data.QuantityDischarged.ToString("0.##")</p>
        </div>
        <div>
            <p class="text-gray-500 dark:text-gray-400">Final Discharge</p>
            <p>@(Data.IsFinalDischarge ? "Yes" : "No")</p>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Data.Notes))
    {
        <div class="mt-4">
            <p class="text-sm text-gray-700 dark:text-gray-300">@Data.Notes</p>
        </div>
    }
</div>

@if (showDeleteModal)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center bg-gray bg-opacity-100">
        <div class="relative p-4 w-full max-w-md max-h-full">
            <div class="relative bg-white rounded-lg shadow-sm dark:bg-gray-700">
                <button type="button" class="absolute top-3 end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                        @onclick="HideDeleteConfirmation">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
                <div class="p-4 md:p-5 text-center">
                    <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                    </svg>
                    <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Are you sure you want to delete?</h3>
                    <button type="button" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
                            @onclick="() => ConfirmDelete(Data.Id)">
                        Yes, I'm sure
                    </button>
                    <button type="button" class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"
                            @onclick="HideDeleteConfirmation">
                        No, cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Discharge Data { get; set; } = new();
    [Parameter] public EventCallback<Discharge> OnEdit { get; set; }
    [Parameter] public EventCallback<Guid> OnDelete { get; set; }

    private bool showDeleteModal = false;

    private void ShowDeleteConfirmation()
    {
        showDeleteModal = true;
    }

    private void HideDeleteConfirmation()
    {
        showDeleteModal = false;
    }

    private async Task ConfirmDelete(Guid id)
    {
        showDeleteModal = false;
        if (OnDelete.HasDelegate)
        {
            await OnDelete.InvokeAsync(id);
        }
    }
}
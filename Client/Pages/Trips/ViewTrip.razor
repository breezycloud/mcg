@page "/view-trip/{id:guid}"
@inject ITripService TripService
@attribute [Authorize]
<div class="max-w-4xl mx-auto px-4 lg:px-6">
    <!-- Header Section -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
        <div>
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Trip Details</h2>
            <div class="flex flex-col gap-x-4">
                <div>
                    <span class="font-semibold">Dispatch:</span>
                    @Trip.DispatchId
                </div>
                <div>
                    <span class="font-semibold">Waybill:</span>
                    @Trip.LoadingInfo.WaybillNo
                </div>
            </div>
        </div>
        <div class="mt-4 md:mt-0">
            <span class="@GetStatusBadgeClass(Trip.Status) text-xs font-medium px-2.5 py-0.5 rounded-full">
                @Trip.Status
            </span>
        </div>
    </div>    
</div>

@code {
    [Parameter] public Guid id { get; set; }
    public Trip? Trip { get; set; }

    [Parameter]
    public EventCallback OnBack { get; set; }

    [Parameter]
    public EventCallback OnEdit { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Trip is null)
        {
            Trip = await TripService.GetAsync(id, AppState.GetCancellationToken());
        }
    }

    private string GetStatusBadgeClass(TripStatus status)
    {
        return status switch
        {
            TripStatus.Closed => "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300",
            TripStatus.Active => "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300",
            _ => "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300",
        };
    }
}
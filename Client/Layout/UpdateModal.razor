<!-- Modal -->
@inject IJSRuntime js
<div tabindex="-1" aria-hidden="@(!AppState.ShowUpdateDialog)"
    class="fixed top-0 left-0 right-0 z-50 w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full justify-center items-center bg-opacity-50
        transition-opacity duration-300 ease-in-out
        @(AppState.ShowUpdateDialog ? "flex opacity-100" : "hidden opacity-0")">
    <div class="relative w-full max-w-md h-full md:h-auto
        transform transition-transform duration-300 ease-in-out
        @(AppState.ShowUpdateDialog ? "scale-100" : "scale-95")">
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <!-- Modal header -->
            <div class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                    New Update Available
                </h3>
                <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                     @onclick="Close">
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <!-- Modal body -->
            <div class="p-6 space-y-4">
                <p class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
                    Version @(ServerVersion) is now available. @(ReleaseNotes)
                </p>
            </div>
            <!-- Modal footer -->
            <div class="flex justify-end p-4 border-t border-gray-200 rounded-b dark:border-gray-600">
                <button type="button"
                    class="text-white bg-green-600 hover:bg-green-700 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
                    @onclick="UpdateNow">
                    Update Now
                </button>
                @* <button data-modal-hide="update-modal" type="button"
                    class="ml-2 text-gray-500 bg-white border border-gray-200 hover:bg-gray-100 hover:text-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5">
                    Remind Me Later
                </button> *@
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public double ServerVersion { get; set; }
    
    [Parameter]
    public double ClientVersion { get; set; }

    [Parameter]
    public string? ReleaseNotes { get; set; }
    
    void Close() => AppState.ShowUpdateDialog = false;

    private async Task UpdateNow()
    {
        // Clear cache and reload
        await js.InvokeVoidAsync("deleteAllCaches");
        @* await js.InvokeVoidAsync("caches.delete", "dotnet-resources-/"); *@
        await js.InvokeVoidAsync("window.location.reload", true);
        await localStorage.SetItemAsync("clientVersion", ServerVersion);
    }

    private async Task RemindLater()
    {        
        // Remember this version was deferred
        await localStorage.SetItemAsync("lastDeferredVersion", ServerVersion);
        Close();
    }
}
<div class="flex items-center space-x-1 my-4">
    @foreach (var star in Stars)
    {
        <button type="button"
                @onclick="(() => HandleClick(star))"
                class="@(Stars.IndexOf(star) < CurrentRating ? "text-yellow-400" : "text-gray-300") hover:text-yellow-500 focus:outline-none focus:ring-2 focus:ring-yellow-300 rounded-full p-1">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.462a1 1 0 00.95-.69l1.07-3.292z"></path>
            </svg>
        </button>
    }
    <span class="ml-2 text-sm font-medium text-gray-700">
        @if (CurrentRating > 0)
        {
            @GetRatingText()
        }
        else
        {
            <span class="text-gray-400">(Click to rate)</span>
        }
    </span>            
</div>

@code {
    [Parameter] public int MaxRating { get; set; } = 5;
    [Parameter] public int CurrentRating { get; set; } = 0;
    private int Index { get; set; }

    [Parameter] public EventCallback<int> OnRatingChanged { get; set; }

    private List<string> Stars = ["one", "two", "three", "four", "five"];


    private async Task HandleClick(string rating)
    {        
        if (!Stars.Contains(rating))
            return;

        Index = Stars.IndexOf(rating);
        CurrentRating = Index + 1;

        if (OnRatingChanged.HasDelegate)
        {
            await OnRatingChanged.InvokeAsync(CurrentRating);
        }        
    }

    private string GetRatingText()
    {
        return CurrentRating switch
        {
            1 => "Poor",
            2 => "Fair",
            3 => "Good",
            4 => "Very Good",
            5 => "Excellent",
            _ => "Unknown"
        };
    }

    // Debug: Log values during render (optional, remove in production)
    protected override async Task OnInitializedAsync()
    {
        if (CurrentRating > 0)        
        {
            var rating = Stars[CurrentRating - 1];
            Console.WriteLine(rating);
            await HandleClick(rating!);
        }            
    }
}
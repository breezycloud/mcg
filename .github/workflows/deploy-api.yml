name: Deploy Production API to VPS

on:
  push:
    branches:
        - main  # Change if using 'master'
    paths:
        - 'Api/**'   # Only trigger when files in Api/ are modified
        - 'Shared/**'

jobs:
    deploy:
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Setup .NET
            uses: actions/setup-dotnet@v3
            with:
              dotnet-version: '9.0.x'
                      
          - name: Restore Api Dependencies
            run: dotnet restore Api

          - name: Build and Publish Api
            run: |
              dotnet publish Api \
                  -c Release \
                  -o ./publish \
                  /p:EnvironmentName=Production

          - name: Upload Api via SSH
            uses: appleboy/scp-action@v0.1.7
            with:
              host: ${{ secrets.VPS_HOST }}
              username: ${{ secrets.VPS_USERNAME }}
              password: ${{ secrets.VPS_PASSWORD }}
              source: "./publish/*"
              target: ${{ secrets.API_TARGET }}
              rm: true  # Remove old files before copy

           # ðŸ‘‡ NEW STEP: Create uploads directory on VPS with proper permissions
          - name: Create Uploads Directory on VPS
            uses: appleboy/ssh-action@v0.1.10
            with:
              host: ${{ secrets.VPS_HOST }}
              username: ${{ secrets.VPS_USERNAME }}
              password: ${{ secrets.VPS_PASSWORD }}
              script: |
                echo "âœ… Creating /var/www/uploads directory..."
                sudo mkdir -p /var/www/uploads
                sudo chown www-data:www-data /var/www/uploads  # ðŸ‘ˆ Change to your service user!
                sudo chmod 755 /var/www/uploads
                ls -ld /var/www/uploads  # Verify
                echo "âœ… Created and configured /var/www/uploads"

          - name: Restart Service on VPS
            uses: appleboy/ssh-action@v0.1.10
            with:
              host: ${{ secrets.VPS_HOST }}
              username: ${{ secrets.VPS_USERNAME }}
              password: ${{ secrets.VPS_PASSWORD }}
              script: |
                  echo "âœ… Deployed files to VPS"
                  echo "ðŸ”„ Restarting mcc-api.service..."
                  sudo systemctl stop mcc-api.service            
                  sudo systemctl start mcc-api.service
                  sudo systemctl status mcc-api.service --no-pager -l --lines=10
                  echo "âœ… Deployment complete!"